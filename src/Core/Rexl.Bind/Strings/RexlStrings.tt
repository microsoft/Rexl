<#@ include file="Strings.ttinclude" #>
<# Generate("RexlStrings.tt", "RexlStrings"); #>
<# #if false

#region Standard argument strings.
ArgCount = "count"
ArgDefinition = "definition"
ArgPredicate = "predicate"
ArgIfPredicate = "[if] predicate"
ArgWhilePredicate = "[while] predicate"
ArgElse = "else"
ArgSeed = "seed"
ArgSelector = "selector"
ArgKeySelector = "key_selector"
ArgIterSelector = "iteration_selector"
ArgResSelector = "result_selector"
ArgSource = "source"
ArgLookUp = "lookup"
ArgIndex = "index"
ArgMinIndex = "min_index"
ArgLimIndex = "lim_index"
ArgValue = "value"
ArgX = "x"
ArgY = "y"
ArgAngle = "angle"

AboutArgSeqSource = "The source sequence."
AboutArgPredicate = "The condition with which to test an item."
AboutArgIfPredicate = "'[if]' directive, followed by the condition with which to test an item."
AboutArgWhilePredicate = "'[while]' directive, followed by the condition with which to test an item."
AboutArgSeed = "The initial iteration value, typically including a name ('name: value')."
#endregion Standard argument strings.

// Function signature and parameter descriptions.
AboutForEach = "Produces a value for each item from a source sequence or each set of corresponding items from multiple source sequences. The length of the resulting sequence is the length of the shortest source sequence."
AboutForEach_WithIfPred = "Produces a value for each item from a source sequence or each set of corresponding items from multiple source sequences that satisfies the [if] predicate."
AboutForEach_WithWhilePred = "Produces a value for each item from a source sequence or each set of corresponding items from multiple source sequences, as long as the [while] predicate is satisfied."
AboutForEach_Source = "A source sequence, optionally with an item name ('item_name: sequence')."
AboutForEach_Selector = "The value to produce."

AboutRangeFunc = "Generates an arithmetic sequence of integers within a specified range."
RangeFuncArg1 = "min"
AboutRangeFuncArg1 = "Inclusive lower limit of generated sequence."
RangeFuncArg2 = "limit"
AboutRangeFuncArg2 = "Exclusive upper limit of generated sequence."
RangeFuncArg3 = "step"
AboutRangeFuncArg3 = "Step distance between each generated value in sequence."

AboutSort = "Sorts the items of the sequence, by the selector value(s), using default order (up for text, down for other types)."
AboutSortUp = "Sorts the items of the sequence, by the selector value(s), in small to large order."
AboutSortDown = "Sorts the items of the sequence, by the selector value(s), in large to small order."
AboutSort_Source = "The sequence to sort."
AboutSort_SourceOnly = "The sequence to sort. May be prefixed with a sort directive: [up], [down], [<], [>], [~], [~up], [~down], [~<], [~>]."
AboutSort_Selector = "A value to sort on. May be prefixed with a sort directive: [up], [down], [<], [>], [~], [~up], [~down], [~<], [~>]."

AboutReverse = "Reverses the order of the items of the sequence."
AboutReverse_Source = "The sequence to reverse."

AboutDistinct = "Gets the distinct items contained in the sequence in the original order of their first appearance."
AboutDistinct_Source = "The sequence to remove duplicated items from."
AboutDistinct_Key = "Optional key value to match by."

AboutChain = "Concatenates sequences."
AboutChain_Source = "A sequence to concatenate."

AboutChainMap = "Flattens the sequence of sequences into a single sequence."
AboutChainMapArity2 = "Flattens the sequence of sequences into a single sequence after applying the sequence selector."
AboutChainMap_Source = "The sequence to flatten."
AboutChainMap_Selector = "The sequence selector to apply on the sequence to flatten."

AboutFirst = "Gets the first item contained in the sequence that satisfies the optional predicate. Otherwise returns null."

AboutTakeAt = "Returns the item in the source sequence at the given index. If the index is invalid, returns a default value."
AboutTakeAt_Index = "The index of the desired item. Negative values index from the end of the sequence."
AboutTakeAt_Else = "The value to return if the index is invalid."

AboutTakeOne = "Returns the first item in the source sequence that satisfies the optional predicate. Otherwise returns a default value."
AboutTakeOne_Else = "The value to return if the sequence is empty or no item satisfies the predicate."

AboutDropOne = "Drops the first item in the source sequence that satisfies the optional predicate."

AboutTake = "Takes the first 'count' items contained in the source sequence that satisfy the optional predicate."
AboutDrop = "Drops the first 'count' items contained in the source sequence that satisfy the optional predicate."
AboutTake_Count = "The number of items to take."
AboutDrop_Count = "The number of items to drop."

AboutTakeIf = "Takes the items of the source sequence that satisfy the predicate."
AboutDropIf = "Drops the items of the source sequence that satisfy the predicate."

AboutTakeWhile = "Takes the initial items contained in the source sequence that satisfy the predicate."
AboutDropWhile = "Drops the initial items contained in the source sequence that satisfy the predicate."

AboutTakeCountWhile = "Takes the initial 'count' items contained in the source sequence that satisfy the [while] predicate."
AboutDropCountWhile = "Drops the initial 'count' items contained in the source sequence that satisfy the [while] predicate."

AboutRepeat = "Produces a sequence consisting of the value repeated count times."
AboutRepeat_Value = "The value to repeat."
AboutRepeat_Count = "The number of items to produce."

AboutCount = "Gets the number of items contained in the source sequence which satisfy the optional predicate."
AboutCount_Source = "A sequence."
AboutCount_Predicate = "The condition with which to test an item."

AboutAny1 = "Determines whether at least one item of the source sequence is true."
AboutAny2 = "Determines whether at least one item of the source sequence satisfies the predicate."
AboutAny1_Source = "Sequence of booleans to evaluate."
AboutAny2_Source = "Sequence of items to evaluate."
AboutAny_Predicate = "The condition with which to test an item."

AboutAll1 = "Determines whether all items of the source sequence are true."
AboutAll2 = "Determines whether all items of the source sequence satisfy the predicate."
AboutAll1_Source = "Sequence of booleans to evaluate."
AboutAll2_Source = "Sequence of items to evaluate."
AboutAll_Predicate = "The condition with which to test an item."

AboutDateArity8Func = "Creates a Date value using the specified year, month, day, hour, minute, second, millisecond, and ticks."
DateFuncArg1 = "year"
AboutDateFuncArg1 = "The year component of the Date."
DateFuncArg2 = "month"
AboutDateFuncArg2 = "The month component of the Date."
DateFuncArg3 = "day"
AboutDateFuncArg3 = "The day component of the Date."
DateFuncArg4 = "hour"
AboutDateFuncArg4 = "The hour component of the Date."
DateFuncArg5 = "minute"
AboutDateFuncArg5 = "The minute component of the Date."
DateFuncArg6 = "second"
AboutDateFuncArg6 = "The second component of the Date."
DateFuncArg7 = "millisecond"
AboutDateFuncArg7 = "The millisecond component of the Date."
DateFuncArg8 = "ticks"
AboutDateFuncArg8 = "The ticks component of the Date."

AboutTimeArity6Func = "Creates a Time value using the specified days, hours, minutes, seconds, milliseconds, and ticks."
TimeFuncArg1 = "days"
AboutTimeFuncArg1 = "The days component of the Time."
TimeFuncArg2 = "hours"
AboutTimeFuncArg2 = "The hours component of the Time."
TimeFuncArg3 = "minutes"
AboutTimeFuncArg3 = "The minutes component of the Time."
TimeFuncArg4 = "seconds"
AboutTimeFuncArg4 = "The seconds component of the Time."
TimeFuncArg5 = "milliseconds"
AboutTimeFuncArg5 = "The milliseconds component of the Time."
TimeFuncArg6 = "ticks"
AboutTimeFuncArg6 = "The ticks component of the Time."

AboutDateYearFunc = "Extracts the year component from the Date value."
AboutDateMonthFunc = "Extracts the month component from the Date value."
AboutDateDayFunc = "Extracts the day component from the Date value."
AboutDateHourFunc = "Extracts the hour component from the Date value."
AboutDateMinuteFunc = "Extracts the minute component from the Date value."
AboutDateSecondFunc = "Extracts the second component from the Date value."
AboutDateMillisecondFunc = "Extracts the millisecond component from the Date value."
AboutDateTickFunc = "Extracts the tick component from the Date value."
AboutDateTotalTicksFunc = "Returns the total ticks of the Date value."
AboutDateDayOfYearFunc = "Returns the day of year of the Date value."
AboutDateDayOfWeekFunc = "Returns the day of week of the Date value."
AboutDateStartOfYearFunc = "Returns the first Date value in the year of the specified Date value."
AboutDateStartOfMonthFunc = "Returns the first Date value in the month of the specified Date value."
AboutDateStartOfWeekFunc = "Returns the first Date value in the week of the specified Date value."
AboutDateDateFunc = "Extracts the date portion and drops the time from the Date value."
AboutDateTimeFunc = "Extracts the time portion as a Time from the Date value."
AboutTimeDayFunc = "Extracts the day component from the Time value."
AboutTimeHourFunc = "Extracts the hour component from the Time value."
AboutTimeMinuteFunc = "Extracts the minute component from the Time value."
AboutTimeSecondFunc = "Extracts the second component from the Time value."
AboutTimeMillisecondFunc = "Extracts the millisecond component from the Time value."
AboutTimeTickFunc = "Extracts the tick component from the Time value."
AboutTimeTotalDaysFunc = "Returns the whole and fractional days of the Time value."
AboutTimeTotalHoursFunc = "Returns the whole and fractional hours of the Time value."
AboutTimeTotalMinutesFunc = "Returns the whole and fractional minutes of the Time value."
AboutTimeTotalSecondsFunc = "Returns the whole and fractional seconds of the Time value."
AboutTimeTotalMillisecondsFunc = "Returns the whole and fractional milliseconds of the Time value."
AboutTimeTotalTicksFunc = "Returns the total ticks of the Time value."

AboutChronoPart_Value = "The value to extract from."

AboutCastDate = "Casts an optional value to Date, or returns the default (1/1/0001) if not possible."
AboutCastDate_Value = "The value to cast to Date."

AboutToDate = "Converts the value to Date, or returns null if not possible."
AboutToDate_Value = "The value to convert to Date."

AboutCastTime = "Casts an optional value to Time, or returns the default if not possible."
AboutCastTime_Value = "The value to cast to Time."

AboutToTime = "Converts the value to Time, or returns null if not possible."
AboutToTime_Value = "The value to convert to Time."

AboutCastGuid = "Converts an optional value to Guid, or returns the default if not possible."
AboutCastGuid_Value = "The value to cast to Guid."

AboutToGuid = "Converts the value to Guid, or returns null if not possible."
AboutToGuid_Value = "The value to convert to Guid."

AboutMakeGuid = "Generates a Guid. This is a volatile function, not usable in some contexts."

AboutSetFields = "Combines the source record with field definitions to produce a new record, with added, modified, renamed or removed fields."
AboutSetFields_Source = "The source record or sequence of records."
AboutSetFields_Definition = "A named value ('field_name: value'), defining a field in the result record. If 'value' is the name of a field in the source record, that field is renamed to 'field_name' in the result record. If 'value' is the 'null' literal, then 'field_name' is dropped from the result record."

AboutAddFields = "Combines the source record with field definitions to produce a new record, with added, modified or removed fields."
AboutAddFields_Source = "The source record or sequence of records."
AboutAddFields_Definition = "A named value ('field_name: value'), defining a field in the result record. If 'value' is the 'null' literal, then 'field_name' is dropped from the result record."

AboutGroupBy = "Groups the items of the sequence."
AboutGroupBy_Source = "The sequence whose items to group."
AboutGroupBy_Key = "Key value to group by. Optionally prefixed with [key] directive to differentiate from 'auto_name' ('[key] name: value')."
GroupBy_Group = "group_selector"
AboutGroupBy_Group = "The value computed from a group. Prefixed with [group] directive ('[group] name: value')."
GroupBy_Item = "item_selector"
AboutGroupBy_Item = "The value computed from each item of a group. Prefixed with [item] directive ('[item] name: value')."
GroupBy_Auto = "auto_name"
AboutGroupBy_Auto = "Field name for the group sequence (with any key fields dropped)."

AboutAbs = "Computes the absolute value of the number."
AboutAbs_Source = "The number to get absolute value."

AboutSqrt = "Computes the square root of the specified number."
AboutMathFuncArgValue = "The value."
AboutExp = "Computes e raised to the specified power."
AboutExpArg = "The value specifying the power."
AboutLn = "Computes the natural logarithm of the specified number."
AboutLog10 = "Computes the base 10 logarithm of the specified number."
AboutRadians = "Converts the specified angle measured in degrees to an angle measured in radians."
AboutDegrees = "Converts the specified angle measured in radians to an angle measured in degrees."
AboutSin = "Computes the sine of the specified angle in radians."
AboutCos = "Computes the cosine of the specified angle in radians."
AboutTan = "Computes the tangent of the specified angle in radians."
AboutCsc = "Computes the cosecant of the specified angle in radians."
AboutSec = "Computes the secant of the specified angle in radians."
AboutCot = "Computes the cotangent of the specified angle in radians."
AboutSinD = "Computes the sine of the specified angle in degrees."
AboutCosD = "Computes the cosine of the specified angle in degrees."
AboutTanD = "Computes the tangent of the specified angle in degrees."
AboutCscD = "Computes the cosecant of the specified angle in degrees."
AboutSecD = "Computes the secant of the specified angle in degrees."
AboutCotD = "Computes the cotangent of the specified angle in degrees."
AboutSinh = "Computes the hyperbolic sine of the specified value."
AboutCosh = "Computes the hyperbolic cosine of the specified value."
AboutTanh = "Computes the hyperbolic tangent of the specified value."
AboutCsch = "Computes the hyperbolic cosecant of the specified value."
AboutSech = "Computes the hyperbolic secant of the specified value."
AboutCoth = "Computes the hyperbolic cotangent of the specified value."
AboutAsin = "Computes the angle in radians whose sine is the specified number."
AboutAsinArg = "The sine value."
AboutAcos = "Computes the angle in radians whose cosine is the specified number."
AboutAcosArg = "The cosine value."
AboutAtan = "Computes the angle in radians whose tangent is the specified number."
AboutAtanArg = "The tangent value."
AboutRound = "Rounds the value to the nearest integer, and rounds midpoint values to the nearest even integer."
AboutRoundArg = "The value to be rounded."
AboutRoundUp = "Returns the smallest integral value greater than or equal to the specified number."
AboutRoundDown = "Returns the largest integral value less than or equal to the specified number."
AboutRoundIn = "Returns to the nearest integer towards zero."
AboutRoundOut = "Returns to the nearest integer away from zero."
AboutAngleInRadians = "The angle, measured in radians."
AboutAngleInDegrees = "The angle, measured in degrees."

AboutTTestOneSample = "Performs a one-sample t-test."
AboutTTestOneSample_X = "The sample as a sequence of values."
TTestOneSample_Mean = "pop_mean"
AboutTTestOneSample_Mean = "The hypothesized population mean. Defaults to 0."

AboutTTestTwoSample = "Performs a two-sample t-test, also known as an independent samples t-test."
TTestTwoSample_EqualVar = "equal_var"
AboutTTestTwoSample_EqualVar = "Whether to assume equal population variances. If true, performs a standard Student's t-test. If false, performs a Welch's unequal variances t-test. Defaults to false."
AboutTTestPairedNoSel = "Performs a paired samples t-test, also known as a dependent or related samples t-test. If given samples of unequal length, the longer sample will be truncated to the length of the shorter sample."
AboutTTest_X = "The first sample as a sequence of values."
AboutTTest_Y = "The second sample as a sequence of values."

AboutTTestPairedSel = "Performs a paired samples t-test, also known as a dependent or related samples t-test. Values in each sample are generated by evaluating selectors against the source sequence."
AboutTTestPairedSel_Source = "The source sequence."
AboutTTestPairedSel_X = "Selector for each value in the first sample."
AboutTTestPairedSel_Y = "Selector for each value in the second sample."

// "XxxDir" means the direct single arg version, aggregating a sequence of values.
// "XxxSel" means the source/selector version, aggregating a selector value.

AboutSumDir = "Computes the sum of the sequence."
AboutSumSel = "Computes the sum of the selector value over items of the source sequence(s)."
AboutSumBigDir = "Computes the sum of the sequence and produces the best precision result."
AboutSumBigSel = "Computes the sum of the selector value over items of the source sequence(s) and produces the best precision result."
AboutSumKahDir = "Computes the sum of the sequence using Kahan floating point compensation."
AboutSumKahSel = "Computes the sum of the selector value over items of the source sequence(s) using Kahan floating point compensation."
AboutSumDir_Source = "The sequence to sum."
AboutSumSel_Source = "The source sequence."
AboutSumSel_Selector = "The value to sum."

AboutMeanDir = "Computes the average of the sequence."
AboutMeanSel = "Computes the average of the selector value over items of the source sequence(s)."
AboutMeanDir_Source = "The sequence to average."
AboutMeanSel_Source = "The source sequence."
AboutMeanSel_Selector = "The value to average."

AboutMinDir = "Computes the minimum value of the sequence."
AboutMaxDir = "Computes the maximum value of the sequence."
AboutMinMaxDir = "Computes the minimum and maximum values of the sequence."
AboutMinSel = "Computes the minimum of the selector value over items of the source sequence(s)."
AboutMaxSel = "Computes the maximum of the selector value over items of the source sequence(s)."
AboutMinMaxSel = "Computes the minimum and maximum values of the selector value over items of the source sequence(s)."
AboutMinDir_Source = "The sequence to minimize."
AboutMaxDir_Source = "The sequence to maximize."
AboutMinMaxDir_Source = "The sequence to minimize and maximize."
AboutMinSel_Selector = "The value to minimize."
AboutMaxSel_Selector = "The value to maximize."
AboutMinMaxSel_Selector = "The value to minimize and maximize."

AboutDiv = "Computes 'x' divided by 'y' then rounds toward zero to the nearest integer."
AboutDiv_X = "The numerator to be divided by denominator."
AboutDiv_Y = "The denominator by which numerator is to be divided."

AboutMod = "Computes the remainder when 'x' is divided by 'y' with the quotient rounded toward zero to the nearest integer value. Note that the sign of the result is the same as the sign of 'x'."
AboutMod_X = "The numerator to be divided by denominator."
AboutMod_Y = "The denominator by which numerator is to be divided."

AboutBin = "Computes 'x' rounded towards zero to the nearest integer multiple of 'y'."
AboutBin_X = "The number to round toward zero."
AboutBin_Y = "The bin size. Note that its sign does not affect the result."

AboutRandomUniformUnit = "Generates random real numbers distributed uniformly over the unit interval [0, 1)."
AboutRandomUniform_Seed = "Seed to use for random number generation."
AboutRandomUniform_Count = "If given, generate a sequence of this many random numbers."
AboutRandomUniformRange = "Generates random real numbers distributed uniformly over the given interval."
AboutRandomUniform_X = "First bound of the interval."
AboutRandomUniform_Y = "Second bound of the interval."

AboutDateNow = "Returns a record with the current date (and time of day) in both 'Utc' and 'Local', together with the time zone 'Offset'"
AboutDateNowUtc = "Returns the current UTC date (and time of day)"
AboutDateNowLoc = "Returns the current local date (and time of day)"

AboutLower = "Converts text to lowercase."
AboutLower_Source = "The text to convert to lowercase."

AboutUpper = "Converts text to uppercase."
AboutUpper_Source = "The text to convert to uppercase."

AboutStartsWith = "Tests whether the beginning of the source text matches the lookup text."
AboutStartsWith_Source = "The text to look in."
AboutStartsWith_LookUp = "The text to look for."

AboutEndsWith = "Tests whether the end of the source text matches the lookup text."

AboutStrLen = "Returns the number of characters in the text value."
AboutStrLen_Source = "The text in which to count the characters."

AboutStrJoin = "Concatenates the members of the sequence of text values using the specified seperator."
AboutStrJoin_Source = "The sequence of text values to concatenate."
StrJoinFuncArg2 = "separator"
AboutStrJoinFuncArg2 = "The separator used for concatenation."

AboutStrIndexOf = "Returns the index of the first occurrence of the lookup text in the source text, within the optional range ['min_index', 'lim_index'). Returns -1 if not found."
AboutStrLastIndexOf = "Returns the index of the last occurrence of the lookup text in the source text, ending at the optional lim index. Returns -1 if not found."
AboutStrLastIndexOf_WithRange = "Returns the index of the last occurrence of the lookup text in the source text, within the range ['min_index', 'lim_index'). Returns -1 if not found."
AboutStrIndexOf_Source = "The text to look in."
StrIndexOf_LookUp = "lookup"
AboutStrIndexOf_LookUp = "The text to look for."
AboutStrIndexOf_MinIndex = "The minimum index of the search range."
AboutStrLastIndexOf_LimIndex = "The limit index of the search range."

AboutStrPart = "Returns the segment of the source text starting and ending at the given indices."
AboutStrPart_Source = "The source text containing the segment."
AboutStrPart_MinIndex = "The minimum index of the segment."
AboutStrPart_LimIndex = "The limit index of the segment."

AboutTrim = "Trims leading and trailing whitespace characters from text."
AboutTrim_Source = "The text to trim."

AboutTrimStart = "Trims leading whitespace characters from text."
AboutTrimStart_Source = "The text to trim."

AboutTrimEnd = "Trims trailing whitespace characters from text."
AboutTrimEnd_Source = "The text to trim."

AboutTextReplace = "Replaces all instances of 'remove' with 'insert' in the text value 'source'."
AboutTextReplace_Source = "The text value to be searched."
AboutTextReplace_Remove = "The text value to search for and remove."
AboutTextReplace_Insert = "The text value to use in place of removed occurrences."
TextReplace_Remove = "remove"
TextReplace_Insert = "insert"

AboutIsNull = "Tests whether the source value is null."
AboutIsNull_Source = "The source value to be tested."

AboutIsEmpty = "Tests whether the sequence or text is empty or null."
AboutIsEmpty_Source = "The source sequence or text to be tested."

AboutGuard = "Evaluates selector in the context of definition(s). A null definition value will result in a null result."
AboutGuard_Definition = "An optionally named value ('name: value') in scope in subsequent definitions and in the selector."
AboutGuard_Selector = "The value to produce."

AboutWith = "Evaluates selector in the context of definition(s)."
AboutWith_Definition = "An optionally named value ('name: value') in scope in subsequent definitions and in the selector."
AboutWith_Selector = "The value to produce."

AboutIf = "Tests the provided conditions until one is true and returns the corresponding value."
IfFuncCondition = "condition"
AboutIf_Predicate = "The condition to test."
IfFuncThenValue = "value"
AboutIf_TrueValue = "The value returned when the condition is true."
IfFuncElseValue = "else_value"
AboutIf_FalseValue = "The value returned when no condition is true."

AboutCastR8 = "Converts the value to 8-byte float without boundary checks. Returns 0 if the conversion is not possible."
AboutCastR4 = "Converts the value to 4-byte float without boundary checks. Returns 0 if the conversion is not possible."
AboutCastIA = "Converts the value to arbitrary precision integer without boundary checks. Returns 0 if the conversion is not possible."
AboutCastI8 = "Converts the value to 8-byte int without boundary checks. Returns 0 if the conversion is not possible."
AboutCastI4 = "Converts the value to 4-byte int without boundary checks. Returns 0 if the conversion is not possible."
AboutCastI2 = "Converts the value to 2-byte int without boundary checks. Returns 0 if the conversion is not possible."
AboutCastI1 = "Converts the value to 1-byte int without boundary checks. Returns 0 if the conversion is not possible."
AboutCastU8 = "Converts the value to 8-byte unsigned int without boundary checks. Returns 0 if the conversion is not possible."
AboutCastU4 = "Converts the value to 4-byte unsigned int without boundary checks. Returns 0 if the conversion is not possible."
AboutCastU2 = "Converts the value to 2-byte unsigned int without boundary checks. Returns 0 if the conversion is not possible."
AboutCastU1 = "Converts the value to 1-byte unsigned int without boundary checks. Returns 0 if the conversion is not possible."
AboutCastXX_Value = "The value to convert."

AboutToR8Arity2 = "Converts the value to 8-byte float, or returns the else value (or null) if not possible."
AboutToR4Arity2 = "Converts the value to 4-byte float, or returns the else value (or null) if not possible."
AboutToIAArity2 = "Converts the value to arbitrary precision integer, or returns the else value (or null) if not possible."
AboutToI8Arity2 = "Converts the value to 8-byte int, or returns the else value (or null) if not possible."
AboutToI4Arity2 = "Converts the value to 4-byte int, or returns the else value (or null) if not possible."
AboutToI2Arity2 = "Converts the value to 2-byte int, or returns the else value (or null) if not possible."
AboutToI1Arity2 = "Converts the value to 1-byte int, or returns the else value (or null) if not possible."
AboutToU8Arity2 = "Converts the value to 8-byte unsigned int, or returns the else value (or null) if not possible."
AboutToU4Arity2 = "Converts the value to 4-byte unsigned int, or returns the else value (or null) if not possible."
AboutToU2Arity2 = "Converts the value to 2-byte unsigned int, or returns the else value (or null) if not possible."
AboutToU1Arity2 = "Converts the value to 1-byte unsigned int, or returns the else value (or null) if not possible."
AboutTo = "Converts the value to the type of the default value. Returns the else value (or null) if not possible."
AboutToXX_Value = "The value to convert."
ToXXArg2 = "default"
AboutToXXArg2 = "The default value to return if the conversion is not possible."

AboutToText = "Converts the value to a text representation."
AboutToText_Value = "The value to represent."
ToTextArg2 = "format"
AboutToTextArg2 = "The format to represent the value."

AboutCrossJoin = "Joins two sequences via the match predicate and selector, with optional unmatched left and right selectors."
CrossJoinArg0 = "left_sequence"
CrossJoinArg1 = "right_sequence"
CrossJoinArg2 = "match_predicate"
CrossJoinArg3 = "match_selector"
CrossJoinArg4 = "unmatched_left_selector"
CrossJoinArg5 = "unmatched_right_selector"
AboutCrossJoinArg0 = "The left sequence to join."
AboutCrossJoinArg1 = "The right sequence to join."
AboutCrossJoinArg2 = "The match condition."
AboutCrossJoinArg3 = "The selector for a match."
AboutCrossJoinArg4 = "The selector for an unmatched value from the left sequence."
AboutCrossJoinArg5 = "The selector for an unmatched value from the right sequence."

AboutKeyJoin = "Joins two sequences using match keys and selector, with optional unmatched left and right selectors."
KeyJoinArg0 = "left_sequence"
KeyJoinArg1 = "right_sequence"
KeyJoinArg2 = "left_match_key"
KeyJoinArg3 = "right_match_key"
KeyJoinArg4 = "match_selector"
KeyJoinArg5 = "unmatched_left_selector"
KeyJoinArg6 = "unmatched_right_selector"
AboutKeyJoinArg0 = "The left sequence to join."
AboutKeyJoinArg1 = "The right sequence to join."
AboutKeyJoinArg2 = "The left key value."
AboutKeyJoinArg3 = "The right key value."
AboutKeyJoinArg4 = "The selector for a match."
AboutKeyJoinArg5 = "The selector for an unmatched value from the left sequence."
AboutKeyJoinArg6 = "The selector for an unmatched value from the right sequence."

AboutTupleItem = "Extracts a slot value from a tuple"
AboutTupleItem_Source = "The tuple from which to extract a slot value."

AboutTupleLen = "Returns the number of slots in a tuple."
AboutTupleLen_Source = "The source tuple."

AboutFold = "Computes a value from the source sequence and the seed by repeatedly evaluating an iteration selector."
AboutFold_Source = "The sequence to compute from, typically including an item name ('name: sequence')."
AboutFold_IterSelector = "The new iteration value computed from the current item of the sequence and the previous iteration value."
AboutFold_ResSelector = "The final result computed from the last iteration value."

AboutScan = "Computes a sequence of values from the source sequence and the seed by repeatedly evaluating an iteration selector."
AboutScan_Source = "The sequence to compute from, typically including an item name ('name: sequence')."
AboutScan_IterSelector = "The new iteration value computed from the current item of the sequence and the previous iteration value."
AboutScanX_ResSelector = "The result value computed from the iteration value."

AboutScanZ_ResSelector = "The result value computed from the iteration value and source item."

AboutGenerateNoState = "Generates a sequence of 'count' values, where each result value is computed from its index."
AboutGenerateNoState_Selector = "The result value computed from the current index."

AboutGenerate = "Generates a sequence of 'count' values, where each result value is computed from an iteration value. The iteration value is initialized to 'seed' and is updated by repeatedly evaluating an iteration selector with access to the current index."
AboutGenerate_Count = "The number of items to generate."
AboutGenerate_IterSelector = "The new iteration value computed from the current index and the previous iteration value."
AboutGenerate_ResSelector = "The result value computed from the iteration value."

// UDF signature and parameter default descriptions.
AboutUdf = "User defined function."
ArgUdf = "Udf parameter."

AboutLinkTo = "Produces a link to a resource or null."
LinkTo_Url = "url"
AboutLinkTo_Url = "URL of the resource."
LinkTo_AccountId = "account_id"
AboutLinkTo_AccountId = "Account ID."
LinkTo_Path = "path"
AboutLinkTo_Path = "The path of the resource."

AboutLinkKind = "Extracts the kind of the link."
AboutLinkAccount = "Extracts the account of the link or null if it doesn't have one."
AboutLinkPath = "Extracts the path of the link."
LinkProp_Link = "link"
AboutLinkProp_Link = "The link."
LinkTo_Flavor = "flavor"
AboutLinkTo_Flavor = "Type of the resource, e.g. \"Image\", \"Video\", \"Text\", \"Image.Xray\", etc."

#endif #>
